version: '3.8'

x-postgres-common:
  &postgres-common
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U postgres --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  bot_image:
    image: bot_image
    container_name: bot_image
    environment:
      - DB_HOST=db_image
      - DB_PORT=5432
      - DB_DATABASE=db2
      - DB_USER=postgres
      - DB_PASSWORD=Qq12345
      - DB_REPL_HOST=db_repl_image
    depends_on:
      - db_image
      - db_repl_image
    volumes:
      - postgres_logs:/var/log/postgresql

  db_image:
    <<: *postgres-common
    image: db_image
    container_name: db_image
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: db2
      POSTGRES_PASSWORD: Qq12345
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c wal_level=replica
      -c max_wal_senders=10
      -c archive_mode=on
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c wal_log_hints=on
      -c log_replication_commands=on
    volumes:
      - postgres_logs:/var/log/postgresql

  db_repl_image:
    <<: *postgres-common
    image: db_repl_image
    container_name: db_repl_image
    ports:
      - 5433:5432
    environment:
      PGUSER: replicator
      PGPASSWORD: replicator_password
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db_image --port=5432
      do
        echo 'Waiting for primary to connect...'
        sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db_image

volumes:
  postgres_logs:
    driver: local
